var searchIndex = JSON.parse('{\
"naughtyfy":{"doc":"","t":[0,0,0,0,7,8,10,5,5,5,5,5,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,12,3,3,3,12,12,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12],"n":["api","errors","flags","types","FAN_EVENT_BUFFER_LEN","Path","as_os_str","fanotify_close","fanotify_init","fanotify_mark","fanotify_read","fanotify_write","Close","FanotifyError","Init","Mark","Read","Write","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","provide","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_ALL_CLASS_BITS","FAN_ALL_EVENTS","FAN_ALL_INIT_FLAGS","FAN_ALL_MARK_FLAGS","FAN_ALL_OUTGOING_EVENTS","FAN_ALL_PERM_EVENTS","FAN_ATTRIB","FAN_AUDIT","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_CREATE","FAN_DELETE","FAN_DELETE_SELF","FAN_DENY","FAN_ENABLE_AUDIT","FAN_EVENT_ON_CHILD","FAN_FS_ERROR","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_EVICTABLE","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORE","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_IGNORE_SURV","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_MOVE","FAN_MOVED_FROM","FAN_MOVED_TO","FAN_MOVE_SELF","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_EXEC","FAN_OPEN_EXEC_PERM","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_RENAME","FAN_REPORT_DFID_NAME","FAN_REPORT_DFID_NAME_TARGET","FAN_REPORT_DIR_FID","FAN_REPORT_FID","FAN_REPORT_NAME","FAN_REPORT_PIDFD","FAN_REPORT_TARGET_FID","FAN_REPORT_TID","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","O_APPEND","O_CLOEXEC","O_DSYNC","O_LARGEFILE","O_NOATIME","O_NONBLOCK","O_RDONLY","O_RDWR","O_WRONLY","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","event_len","fanotify_event_info_header","fanotify_event_metadata","fanotify_response","fd","fd","fmt","fmt","fmt","from","from","from","info_type","into","into","into","len","mask","metadata_len","pad","pid","reserved","response","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vers"],"q":["naughtyfy","","","","naughtyfy::api","","","","","","","","naughtyfy::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","naughtyfy::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","naughtyfy::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Low level function mapping for fanotify","","1-1 mapping of all flags that fanotify.h has ","Contains all the necessary structs needed for fanotify to …","Length of memory to be allocated for read buffer","Converts the implemented types to <code>OsStr</code> using <code>as_os_str()</code> …","","Closes the file descriptor returned by <code>fanotify_init()</code>","Initializes a new fanotify group and returns a file …","Adds, removes, or modifies an fanotify mark on a …","This function ateempts to read from a file descriptor …","Writes up to count bytes from the buffer starting at buf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Compare [<code>fanotify_event_metadata.vers</code>] to verify that the …","Create an event when a file or directory (but see BUGS) is …","An application wants to read a file or directory, for …","Allow the file operation.","","","","","","","Create an event when the metadata for a file or directory …","Bit mask to create audit record for result","This value allows the receipt of events notifying that a …","This is the default value.  It does not need to be …","This value allows the receipt of events notifying that a …","Set the close-on-exec flag (<code>FD_CLOEXEC</code>) on the new file …","Convenience macro - A file is closed (<code>FAN_CLOSE_WRITE</code>|…","Create an event when a read-only file or directory is …","Create an event when a writable file is closed.","A child file or directory was created in a watched parent.","A child file or directory was deleted in a watched parent.","A watched file or directory was deleted.","Deny the file operation.","Enable generation of audit log records about access …","Events for the immediate children of marked directories …","Represents filesystem error","The events in mask will be added to the mark mask (or to …","If pathname is a symbolic link, mark the link itself, …","","Mark the filesystem specified by pathname.  The filesystem …","Remove either all marks for filesystems, all marks for …","This bit is mutually exclusive with <code>FAN_MARK_IGNORED_MASK</code> …","The events in mask shall be added to or removed from the …","The ignore mask shall survive modify events.  If this flag …","Convenience macro - <code>FAN_MARK_IGNORE</code> requires …","","Mark the mount specified by pathname.  If pathname is not …","Marks a directory filesystem object for events. If the …","The events in argument mask will be removed from the mark …","Create an event when a file is modified (write).","Convenience macro - A file or directory has been moved (…","Create an event when a file or directory has been moved …","A file or directory has been moved to a watched parent …","A watched file or directory was moved.","Indicates a queue overflow.","Enable the nonblocking flag (<code>O_NONBLOCK</code>) for the file …","Create events for directories—for example, when …","Create an event when a file or directory is opened.","A file was opened with the intent to be executed.  See …","An application wants to open a file for execution.  The …","Create an event when a permission to open a file or …","The event queue exceeded the limit of 16384 entries.  This …","Create an event when a file is renamed.","Convenience macro - <code>FAN_REPORT_NAME</code> requires …","Convenience macro - <code>FAN_REPORT_TARGET_FID</code> requires all …","","","","","","","Remove the limit of 8192 marks.  Use of this flag requires …","Remove the limit of 16384 events for the event queue.  Use …","","Enable the close-on-exec flag for the new file descriptor.","Write operations on the file will complete according to …","Enable support for files exceeding 2 GB.  Failing to set …","Do not update the file last access time (st_atime in the …","When possible, the file is opened in nonblocking mode.","This value allows only read access.","This value allows read and write access.","This value allows only write access.","","","","","","","","","","","This is the length of the data for the current event and …","In case of an fanotify group that identifies filesystem …","After a successful read(2), the read buffer contains the …","It is used to control file access.","This is an open file descriptor for the object being …","This is the file descriptor from the structure …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","This is a bit mask describing the event (see below).","This is the length of the structure.  The field was …","","If flag <code>FAN_REPORT_TID</code> was set in fanotify_init(2), this is","This field is not used.","This field indicates whether or not the permission is to …","","","","","","","","","","","","This field holds a version number for the structure.  It …"],"i":[0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,7,9,12,14,3,4,7,9,12,14,3,4,4,4,4,4,4,4,4,4,4,4,7,9,12,14,3,4,4,7,9,12,14,3,4,4,4,7,9,12,14,3,4,7,9,12,14,3,4,7,9,12,14,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,21,22,10,21,22,10,21,10,21,10,0,0,0,10,22,10,21,22,10,21,22,21,10,21,22,21,10,10,21,10,10,22,10,21,10,21,22,10,21,22,10,21,22,10],"f":[0,0,0,0,0,0,[[],1],[2,[[5,[[4,[3]]]]]],[[6,6],[[5,[2,[4,[7]]]]]],[[2,6,8,2],[[5,[[4,[9]]]]]],[2,[[5,[[11,[10]],[4,[12]]]]]],[[2,6],[[5,[13,[4,[14]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]],15],16],[[[4,[12]],15],16],[[[4,[7]],15],16],[[[4,[12]],15],16],[[[4,[9]],15],16],[[[4,[14]],15],16],[[[4,[7]],15],16],[[[4,[14]],15],16],[[[4,[9]],15],16],[[[4,[3]],15],16],[[]],[[]],[[]],[[]],[[]],[17,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[],19],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[21,21],[[]],[[]],0,0,0,0,0,0,[[10,15],16],[[21,15],16],[[22,15],16],[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],20],[[],20],[[],20],0],"p":[[3,"OsStr"],[15,"i32"],[3,"Close"],[3,"FanotifyError"],[4,"Result"],[15,"u32"],[3,"Init"],[15,"u64"],[3,"Mark"],[3,"fanotify_event_metadata"],[3,"Vec"],[3,"Read"],[15,"isize"],[3,"Write"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"fanotify_event_info_header"],[3,"fanotify_response"],[8,"Path"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
